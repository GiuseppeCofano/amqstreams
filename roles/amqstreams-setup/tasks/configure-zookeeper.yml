---
##Configure zookeeper properties

- name: Set Zookeper Id for each host of the current group 
  set_fact: 
    myid: "{% for thishost in play_hosts %}{% if inventory_hostname==thishost %}{{ loop.index }}{% endif %}{% endfor %}"
  with_sequence: count="{{ groups['zookeeper'] | length }}"

- name: Add Zookeeper config file
  template:
    src: zookeeper.properties.j2
    dest: "{{ amqstreams_install_path }}/{{ amqstreams_install_dir }}/config/zookeeper.properties"
    owner: "{{ amqstreams_user }}"
    group: "{{ amqstreams_group }}"
    mode: 0400

- name: Create data dir for Zookeeper 
  file:
    path: "{{ zookeeper_data_path }}"
    state: directory
    owner: "{{ amqstreams_user }}"
    group: "{{ amqstreams_group }}"
    mode: 0775
    recurse: yes

- name: Create log dir for Zookeeper 
  file:
    path: "{{ zookeeper_logs_dir }}"
    state: directory
    owner: "{{ amqstreams_user }}"
    group: "{{ amqstreams_group }}"
    mode: 0775
    recurse: yes

#Add myid file
- name: Add Zookeeper id file
  template:
    src: myid.j2
    dest: "{{ zookeeper_data_path }}/myid"
    owner: "{{ amqstreams_user }}"
    group: "{{ amqstreams_group }}"
    mode: 0775

#Add systemd configuration on RHEL 7 systems
- name: Add systemd to RHEL 7 systems
  block: 

    - name: Add Systemd service file 
      template:
        src: zookeeper.service.j2
        dest: "/usr/lib/systemd/system/zookeeper.service"
        owner: root
        group: root
        mode: 0644

    - name: Add Amqstreams config file
      template:
        src: zookeeper.j2
        dest: "/etc/sysconfig/zookeeper"

    #reload systemd
    - name: Perform systemctl daemon-reload
      systemd:
        daemon_reload: yes
      changed_when: false

    - name: Try starting daemon
      systemd: 
        name: "zookeeper"
        state: restarted
        enabled: yes

    #status service test
    - name: "Print status test"
      command: "systemctl status zookeeper"
      register: status_test
      ignore_errors: true  

    - debug: 
        msg: "{{ status_test.stdout_lines }}"

  when: ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_major_version'] == "7"
